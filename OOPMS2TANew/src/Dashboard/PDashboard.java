/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package Dashboard;

import PLogin.Logins;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author bacjssemillano
 */
public class PDashboard extends javax.swing.JFrame {

    /** Creates new form Pdashboard */
    public PDashboard() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CreateNew = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        LeaveReq = new javax.swing.JButton();
        jsettings = new javax.swing.JComboBox<>();
        SalCal = new javax.swing.JButton();
        ViewOwnRecord = new javax.swing.JButton();
        EData = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DASHBOARD");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Screenshot 2025-02-25 175031.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel2.setText("Welcome to Your");

        CreateNew.setText("Create New Employee");
        CreateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateNewActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel3.setText("Payroll Dashboard");

        LeaveReq.setText("Leave Request");
        LeaveReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeaveReqActionPerformed(evt);
            }
        });

        jsettings.setBackground(new java.awt.Color(204, 255, 255));
        jsettings.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jsettings.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Menu", "Logout", "Change Password" }));
        jsettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsettingsActionPerformed(evt);
            }
        });

        SalCal.setText("Salary Calculation");
        SalCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalCalActionPerformed(evt);
            }
        });

        ViewOwnRecord.setText("View Own record");
        ViewOwnRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewOwnRecordActionPerformed(evt);
            }
        });

        EData.setText("Employee Data");
        EData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2))
                                        .addGap(64, 64, 64))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jsettings, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CreateNew, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(EData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LeaveReq, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(ViewOwnRecord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(12, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(SalCal)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jsettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewOwnRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EData, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LeaveReq, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CreateNew, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(SalCal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CreateNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateNewActionPerformed

                CreateEmployeeRecords HomeFrame = new CreateEmployeeRecords();
                HomeFrame.setVisible(true);
                HomeFrame.pack();
                HomeFrame.setLocationRelativeTo(null); 
                this.dispose();
                
    }//GEN-LAST:event_CreateNewActionPerformed

    private void jsettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsettingsActionPerformed
        String selectedItem = (String) jsettings.getSelectedItem();
        
        if (selectedItem.equals("Logout")) {
            logout();    
        }
        
        if (selectedItem.equals("Change Password")){
            changepassword();
        }
    }//GEN-LAST:event_jsettingsActionPerformed

    private void LeaveReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeaveReqActionPerformed
                
                LeaveRequest HomeFrame = new LeaveRequest();
                HomeFrame.setVisible(true);
                HomeFrame.setLocationRelativeTo(null);
                                       
    }//GEN-LAST:event_LeaveReqActionPerformed

    private void SalCalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalCalActionPerformed

    // Create frame
    JFrame frame = new JFrame("Payroll Calculator");
    frame.setSize(400, 450);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLayout(null);
    frame.setLocationRelativeTo(null); // Center the frame

    // Salary Label & Input
    JLabel labelSalary = new JLabel("Enter Basic Salary:");
    labelSalary.setBounds(20, 20, 150, 30);
    frame.add(labelSalary);

    JTextField textSalary = new JTextField();
    textSalary.setBounds(180, 20, 150, 30);
    frame.add(textSalary);

    // Calculate Button
    JButton calculateButton = new JButton("Calculate");
    calculateButton.setBounds(130, 70, 120, 30);
    frame.add(calculateButton);

    // Result Area
    JTextArea resultArea = new JTextArea();
    resultArea.setBounds(20, 120, 350, 200);
    resultArea.setEditable(false);
    frame.add(resultArea);

    // OK Button
    JButton okButton = new JButton("OK");
    okButton.setBounds(160, 340, 100, 30);
    frame.add(okButton);

    // Calculate Payroll Logic
    calculateButton.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            String input = textSalary.getText().trim();

            // Check if input is empty
            if (input.isEmpty()) {
                JOptionPane.showMessageDialog(frame, "Missing Basic Salary", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                double basicSalary = Double.parseDouble(input);

                // Using encapsulated and inherited methods
                EmployeePayroll payroll = new EmployeePayroll(basicSalary);

                // Display result
                resultArea.setText(String.format(
                    "Payroll Summary:\n" +
                    "SSS Deduction: %.2f\n" +
                    "Pag-IBIG Deduction: %.2f\n" +
                    "Tax Deduction: %.2f\n" +
                    "Total Deductions: %.2f\n" +
                    "Rice Subsidy: %.2f\n" +
                    "Phone Allowance: %.2f\n" +
                    "Clothing Allowance: %.2f\n" +
                    "Net Salary: %.2f\n" +
                    "Hourly Rate: %.2f",
                    payroll.calculateSSS(), 
                    payroll.calculatePagIbig(), 
                    payroll.calculateTax(), 
                    payroll.calculateTotalDeductions(), 
                    1500.0, 500.0, 1000.0, 
                    payroll.calculateNetSalary(), 
                    payroll.calculateHourlyRate()
                ));
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(frame, "Invalid Input! Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    });

    // Close application on OK button press
    okButton.addActionListener(e -> frame.dispose());

    // Show frame
    frame.setVisible(true);

    }//GEN-LAST:event_SalCalActionPerformed

    private void ViewOwnRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewOwnRecordActionPerformed
       
                ViewOwnRecord OwnRecord = new ViewOwnRecord();
                OwnRecord.setVisible(true);
                OwnRecord.pack();                
                OwnRecord.setLocationRelativeTo(null);
                this.dispose();
                
    }//GEN-LAST:event_ViewOwnRecordActionPerformed

    private void EDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDataActionPerformed
        
                EmployeeDataViewer HomeFrame = new EmployeeDataViewer();
                HomeFrame.setVisible(true);
                HomeFrame.pack(); 
                HomeFrame.setSize(1200, 650);
                HomeFrame.setLocationRelativeTo(null);                
                this.dispose(); 
                
    }//GEN-LAST:event_EDataActionPerformed

    private void logout() {

        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to log out?", 
                "Log Out", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            // Perform logout actions, e.g., close the app or show login screen
            JOptionPane.showMessageDialog(this, "You have been logged out.");
                    
                Logins Logout = new Logins();
                Logout.setVisible(true);
                Logout.pack();
                Logout.setLocationRelativeTo(null); 
                this.dispose();

        }
    }
    
        private void changepassword() {
            
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to Change Password?", 
                "Log Out", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            // Perform logout actions, e.g., close the app or show login screen
            JOptionPane.showMessageDialog(this, "You can change your Password.");                    
                ChangePassword Change = new ChangePassword(); 

        }

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PDashboard().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateNew;
    private javax.swing.JButton EData;
    private javax.swing.JButton LeaveReq;
    private javax.swing.JButton SalCal;
    private javax.swing.JButton ViewOwnRecord;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> jsettings;
    // End of variables declaration//GEN-END:variables

    
    // Base class encapsulating payroll calculations
class PayrollCalculator {
    private double basicSalary;

    public PayrollCalculator(double basicSalary) {
        this.basicSalary = basicSalary;
    }

    public double getBasicSalary() {
        return basicSalary;
    }

    public double calculateSSS() {
        return basicSalary * 0.045;
    }

    public double calculatePagIbig() {
        return 100;
    }

    public double calculateTax() {
        return basicSalary * 0.10;
    }

    public double calculateTotalDeductions() {
        return calculateSSS() + calculatePagIbig() + calculateTax();
    }

    public double calculateNetSalary() {
        double riceSubsidy = 1500;
        double phoneAllowance = 500;
        double clothingAllowance = 1000;
        return basicSalary - calculateTotalDeductions() + riceSubsidy + phoneAllowance + clothingAllowance;
    }

    public double calculateHourlyRate() {
        return basicSalary / (22 * 8);
    }
}

// Subclass inheriting from PayrollCalculator
class EmployeePayroll extends PayrollCalculator {
    public EmployeePayroll(double basicSalary) {
        super(basicSalary);
    }

    // Overriding method (Polymorphism)
    @Override
    public double calculateNetSalary() {
        return super.calculateNetSalary(); // Can be modified if needed
    }
}

}
